{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACgBC,SAASC,cAAc,SAsC7BC,iBAAiB,UApCJ,SAAAC,GACnBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALI,MAAOC,EAAIL,EAAJK,KAAMC,EAAMN,EAANM,OAO3B,SAASC,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,IACFhB,EAAAuB,OAAOC,QAAQ,uBAAwCC,OAAfV,EAAS,QAAYU,OAANd,EAAM,OAC3DS,EAAM,CAACL,WAAUJ,WAErBX,EAAAuB,OAAOG,QAAQ,sBAAuCD,OAAfV,EAAS,QAAYU,OAANd,EAAM,OACxDU,EAAK,CAACN,WAAUJ,YACnBA,MAfPD,EAAQiB,OAAOjB,EAAMkB,OACrBhB,EAAOe,OAAOf,EAAKgB,OACnBf,EAASc,OAAOd,EAAOe,OACvBvB,EAAMG,cAAcqB,QAgBpB,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAAQiB,IAC1BhB,EAAcgB,EAAI,EAAGpB,GAClBqB,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MACjBsB,QAAQC,IAAI,uBAAwCT,OAAfV,EAAS,QAAYU,OAANd,EAAM,UAE3DwB,OAAM,SAAAH,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MAClBsB,QAAQC,IAAI,sBAAqCT,OAAfV,EAAS,QAAYU,OAANd,EAAM,UAE3DD,GAASE,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\nconst formRef = document.querySelector('.form');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      elements: { delay, step, amount },\n    } = event.currentTarget;\n    delay = Number(delay.value);\n    step = Number(step.value);\n    amount = Number(amount.value);\n    event.currentTarget.reset();\n\n    function createPromise(position, delay) {\n      const shouldResolve = Math.random() > 0.3;\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          if (shouldResolve) {\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            resolve({position, delay});\n          }\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n            reject({position, delay})\n        }, delay)\n      });\n    };\n\n    for (let i = 0; i < amount; i++) {\n      createPromise(i + 1, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      delay += step;\n    }\n\n  };\n  formRef.addEventListener('submit', handleSubmit);\n\n\n\n"],"names":["$h6c0i","parcelRequire","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","delay","step","amount","createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","concat","failure","Number","value","reset","i","then","param","console","log","catch"],"version":3,"file":"03-promises.47c8c17b.js.map"}